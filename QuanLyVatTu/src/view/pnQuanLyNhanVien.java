/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import library.TruyVanDB;

/**
 *
 * @author Administrator
 */
public class pnQuanLyNhanVien extends javax.swing.JPanel implements TableModelListener {

    /**
     * Creates new form Quanlyvattu
     */
    public pnQuanLyNhanVien() {
        initComponents();
        //tableModel.addTableModelListener(this);
        jTable1.setModel(tableModel);
        loadData();
        tableModel.addTableModelListener(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btCatThem = new javax.swing.JButton();
        btCatSua = new javax.swing.JButton();
        btCatXoa = new javax.swing.JButton();
        btCatNhapLai = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Quản Lý Nhân Viên", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 0, 255)))); // NOI18N
        setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Kiểu dữ liệu cần tìm");
        jPanel1.add(jLabel1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chủ đề tìm kiếm", "Chủ đề 1", "Chủ đề 2", " " }));
        jComboBox1.setPreferredSize(new java.awt.Dimension(140, 28));
        jPanel1.add(jComboBox1);

        jLabel2.setText("Nhập dữ liệu cần tìm");
        jPanel1.add(jLabel2);

        jTextField1.setPreferredSize(new java.awt.Dimension(150, 28));
        jPanel1.add(jTextField1);

        jButton2.setText("Tìm");
        jButton2.setPreferredSize(new java.awt.Dimension(49, 28));
        jPanel1.add(jButton2);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        btCatThem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCatThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-icon.gif"))); // NOI18N
        btCatThem.setText("Thêm");
        btCatThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCatThemActionPerformed(evt);
            }
        });
        jPanel4.add(btCatThem);

        btCatSua.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCatSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-icon.gif"))); // NOI18N
        btCatSua.setText("Sửa");
        btCatSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCatSuaActionPerformed(evt);
            }
        });
        jPanel4.add(btCatSua);

        btCatXoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCatXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/del.gif"))); // NOI18N
        btCatXoa.setText("Xóa");
        btCatXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCatXoaActionPerformed(evt);
            }
        });
        jPanel4.add(btCatXoa);

        btCatNhapLai.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCatNhapLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_cancel.png"))); // NOI18N
        btCatNhapLai.setText("Reset");
        jPanel4.add(btCatNhapLai);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 867, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
        );

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btCatThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCatThemActionPerformed
        new FrThemNhanVien().setVisible(true);
    }//GEN-LAST:event_btCatThemActionPerformed

    private void btCatSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCatSuaActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_btCatSuaActionPerformed

    private void btCatXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCatXoaActionPerformed
        // TODO add your handling code here:
        String[] id = {"idnhanvien"};
        String iff = (String) tableModel.getValueAt(jTable1.getSelectedRow(), 0);
        
        if (db.delete("nhanvien", iff) == true) {
            db.delete("nhanvien", iff);
            JOptionPane.showConfirmDialog(null, "Xóa thành công","Thông báo", JOptionPane.CLOSED_OPTION);
        } else {
            JOptionPane.showConfirmDialog(null, "Lỗi xóa","Thông báo", JOptionPane.CLOSED_OPTION);
        };
    }//GEN-LAST:event_btCatXoaActionPerformed

    // Tải dữ liệu lên JTable
    public void loadData() {

        ResultSet result;
        result = db.view("NhanVien", null);
        String[] colsName = {"Mã nhân viên", "Tên nhân viên", "Ngày Sinh", "Địa Chỉ", "SĐT", "Lương", "Chức vụ", "Giới tính"};
        tableModel.setColumnIdentifiers(colsName); // Đặt tiêu đề cho bảng theo các giá trị của mảng colsName

        try {
            while (result.next()) { // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[8];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã hàng)
                rows[1] = result.getString(2);
                rows[2] = result.getString(3);
                rows[3] = result.getString(4);
                rows[4] = String.valueOf(result.getInt(5));
                rows[5] = String.valueOf(result.getInt(6));
                rows[6] = result.getString(7);
                rows[7] = result.getString(8);

                // lấy dữ liệu tai cột số 2 ứng với tên hàng
                tableModel.addRow(rows); // đưa dòng dữ liệu vào tableModel để hiện thị lên jtable
                // mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update lại trên frame
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    private DefaultTableModel tableModel = new DefaultTableModel();
    private TruyVanDB db = new TruyVanDB();
    Vector valueWhere;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCatNhapLai;
    private javax.swing.JButton btCatSua;
    private javax.swing.JButton btCatThem;
    private javax.swing.JButton btCatXoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void tableChanged(TableModelEvent e) {

        String nv[] = {"idnhanvien", "tennhanvien", "ngaysinh", "diachi", "sdt", "luong", "chucvu", "gioitinh"};
        int row = e.getFirstRow();
        int col = e.getColumn();
        // nếu thay đổi giá trị ở cột mã hàng
        if (col == 0) {
            // vector có một phần tử
            Vector newValue = new Vector();
            newValue.add((String) tableModel.getValueAt(row, 0));
            // mang co 1 phan tu
            //String colName[] = { (String) tableModel.getColumnName(0) };
            String colName[] = {(String) nv[0]};
            valueWhere = new Vector();
            valueWhere.add((String) tableModel.getValueAt(row, 1));
            // mảng có 1 phần tử
            //String colsWhere[] = { (String) tableModel.getColumnName(1) }; 
            String colsWhere[] = {(String) nv[1]};

            //JOptionPane.showMessageDialog(null,  "col = " + colName[0] + "value = " + newValue.get(0) + " colw = " + colsWhere[0] + " valuew = " + valueWhere.get(0));
            if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                // yes option
                if (db.update("NhanVien", colName, newValue, colsWhere,
                        valueWhere)) {
                    JOptionPane.showConfirmDialog(null, "Cập nhật thành công",
                            "Thông báo", JOptionPane.CLOSED_OPTION);

                } else {
                    JOptionPane.showConfirmDialog(null, "Lỗi cập nhật",
                            "Thông báo", JOptionPane.CLOSED_OPTION);

                }
            } else {
                // no option
            }

        } else { // nếu thay đổi giá trị ở cột khác

            Vector newValue = new Vector();
            newValue.add((String) tableModel.getValueAt(row, col));
            // mang co 1 phan tu
            //String colName[] = { (String) tableModel.getColumnName(col) }; 
            String colName[] = {(String) nv[col]};
            // vector có 1 phần tử
            valueWhere = new Vector();
            valueWhere.add((String) tableModel.getValueAt(row, 0));

            // lấy tên cột
            //String colsWhere[] = { (String) tableModel.getColumnName(0) };
            String colsWhere[] = {(String) nv[0]};
            if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                // yes option
                if (db.update("NhanVien", colName, newValue, colsWhere,
                        valueWhere)) {
                    JOptionPane.showConfirmDialog(null, "Cập nhật thành công",
                            "Thông báo", JOptionPane.CLOSED_OPTION);

                } else {
                    JOptionPane.showConfirmDialog(null, "Lỗi cập nhật",
                            "Thông báo", JOptionPane.CLOSED_OPTION);

                }
            } else {
                // no option
            }
        }

    }
}
